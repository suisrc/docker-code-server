name: Docker

# https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
# https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  release:
    types: [published]

env:
  DOCKER_IMAGE_NAME: suisrc/vscode

jobs:
  push-centos:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file centos.Dockerfile --tag image
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          #[ "$VERSION" == "master" ] && VERSION=latest
          echo VERSION=$VERSION

      - name: Push github image
        run: |
          REGISTRY_URL=docker.pkg.github.com
          IMAGE_NAME=centos7
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push quay image
        run: |
          REGISTRY_URL=quay.io
          echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  push-debian:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file debian.Dockerfile --tag image
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          #[ "$VERSION" == "master" ] && VERSION=latest
          echo VERSION=$VERSION

      - name: Push github image
        run: |
          REGISTRY_URL=docker.pkg.github.com
          IMAGE_NAME=debian9
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push quay image
        run: |
          REGISTRY_URL=quay.io
          echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION